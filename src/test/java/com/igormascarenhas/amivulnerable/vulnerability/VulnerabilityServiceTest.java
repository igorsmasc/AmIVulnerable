package com.igormascarenhas.amivulnerable.vulnerability;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.ArgumentCaptor;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;

import static org.mockito.Mockito.verify;

import static org.assertj.core.api.AssertionsForClassTypes.assertThat;

@ExtendWith(MockitoExtension.class)
class VulnerabilityServiceTest {

    @Mock
    private VulnerabilityRepository vulnerabilityRepository;
    private VulnerabilityService underTest;

    @BeforeEach
    void setUp() {
        underTest = new VulnerabilityService(vulnerabilityRepository);
    }

    @Test
    void canGetAllVulnerabilities() {
        // When
        underTest.getAllVulnerabilities();

        // Then
        verify(vulnerabilityRepository).findAll();
    }

    @Test
    void canAddNewVulnerability() {
        // Given
        Vulnerability vulnerability = new Vulnerability(
                "Dispositivo vulner√°vel a ataques via usb",
                5
        );

        // When
        underTest.addNewVulnerability(vulnerability);

        // Then
        ArgumentCaptor<Vulnerability> vulnerabilityArgumentCaptor =
                ArgumentCaptor.forClass(Vulnerability.class);

        verify(vulnerabilityRepository)
                .save(vulnerabilityArgumentCaptor.capture());

        Vulnerability capturedVulnerability =
                vulnerabilityArgumentCaptor.getValue();

        assertThat(capturedVulnerability).isEqualTo(vulnerability);
    }

    @Test
    @Disabled
    void deleteVulnerability() {
    }
}