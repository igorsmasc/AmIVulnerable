package com.igormascarenhas.amivulnerable.vulnerability;

import lombok.AllArgsConstructor;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Optional;

@Service
@AllArgsConstructor
public class VulnerabilityService {

    private final VulnerabilityRepository vulnerabilityRepository;

    public List<Vulnerability> getAllVulnerabilities() {
        return vulnerabilityRepository.findAll();
    }

    public Optional<Vulnerability> getVulnerabilityById(Long vulnerabilityId) {
        boolean exists = vulnerabilityRepository.existsById(vulnerabilityId);
        if(!exists) {
            throw new IllegalStateException("Vulnerability with id " + vulnerabilityId + " does not exists.");
        }
        return vulnerabilityRepository.findById(vulnerabilityId);
    }

    public void addNewVulnerability(Vulnerability vulnerability) {
        Optional<Vulnerability> vulnerabilityOptional = vulnerabilityRepository
                .findVulnerabilityByDescription(vulnerability.getDescription());
        if(vulnerabilityOptional.isPresent()) {
            throw new IllegalStateException("This vulnerability already exists.");
        }

        vulnerabilityRepository.save(vulnerability);
    }


    public void deleteVulnerability(Long vulnerabilityId) {
        boolean exists = vulnerabilityRepository.existsById(vulnerabilityId);
        if(!exists) {
            throw new IllegalStateException("Vulnerability with id " + vulnerabilityId + " does not exists.");
        }
        vulnerabilityRepository.deleteById(vulnerabilityId);
    }

}
